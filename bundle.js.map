{"version":3,"sources":["webpack:///webpack/bootstrap 8879e33379b3ad3262ad","webpack:///./lib/tetris.js","webpack:///./lib/board.js","webpack:///./lib/tetrominos.js"],"names":["Tetrominos","Tetris","board","currentTetromino","row","col","tetromino","randomTetromino","rotation","nextTetromino","tetrominos","o","i","j","l","z","s","t","Math","floor","random","length","eachBlock","x","y","setBlock","undefined","bind","removeCurrentTetromino","isOccupied","placeCurrentTetromino","dRow","dCol","newRow","newCol","moved","setTimeout","move","rotateCurrentTetromino","play","printGridToConsole","console","log","document","addEventListener","tetris","Board","gridHeight","gridWidth","grid","initializeGrid","push","Array","callback","tetrominoBlocks","rotations","currBit","occupied","testOccupation","Boolean","blockAt","rowString","string"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8879e33379b3ad3262ad\n **/","import Board from './board';\nimport * as Tetrominos from './tetrominos';\n\nclass Tetris {\n  constructor() {\n    this.board = new Board();\n    this.currentTetromino = {\n      row: 0,\n      col: 4,\n      tetromino: this.randomTetromino(),\n      rotation: 0\n    };\n    this.nextTetromino = this.randomTetromino();\n  }\n\n  randomTetromino() {\n    const tetrominos = [Tetrominos.o, Tetrominos.i, Tetrominos.j, Tetrominos.l,\n      Tetrominos.z, Tetrominos.s, Tetrominos.t];\n    return tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  }\n\n  removeCurrentTetromino() {\n    this.board.eachBlock(\n      this.currentTetromino.row,\n      this.currentTetromino.col,\n      this.currentTetromino.tetromino,\n      this.currentTetromino.rotation,\n      function (x, y) {\n        this.board.setBlock(x, y, undefined);\n      }.bind(this)\n    );\n  }\n\n  placeCurrentTetromino() {\n    this.board.eachBlock(\n      this.currentTetromino.row,\n      this.currentTetromino.col,\n      this.currentTetromino.tetromino,\n      this.currentTetromino.rotation,\n      function (x, y) {\n        this.board.setBlock(x, y, this.currentTetromino.tetromino);\n      }.bind(this)\n    );\n  }\n\n  rotateCurrentTetromino() {\n    this.removeCurrentTetromino();\n    if (!this.board.isOccupied(\n      this.currentTetromino.row,\n      this.currentTetromino.col,\n      this.currentTetromino.tetromino,\n      (this.currentTetromino.rotation + 1) % 4\n    )) {\n      this.currentTetromino.rotation =\n      (this.currentTetromino.rotation + 1) % 4;\n    }\n\n    this.placeCurrentTetromino();\n  }\n\n  /**\n   * move current tetromino by dRow, dCol if space is available for it to move\n   * return true if moved, false o.w.\n   */\n  move(dRow, dCol) {\n    const newRow = this.currentTetromino.row + dRow;\n    const newCol = this.currentTetromino.col + dCol;\n    this.removeCurrentTetromino();\n    let moved = false;\n\n    if (!this.board.isOccupied(newRow, newCol, this.currentTetromino.tetromino, this.currentTetromino.rotation)) {\n      this.currentTetromino.row = newRow;\n      this.currentTetromino.col = newCol;\n      moved = true;\n    }\n\n    this.placeCurrentTetromino();\n    return moved;\n  }\n\n  play() {\n    setTimeout(function () {\n      this.move(1, 0);\n      this.rotateCurrentTetromino();\n      this.play();\n    }.bind(this), 500);\n    this.board.printGridToConsole();\n    console.log('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~');\n  }\n}\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const tetris = new Tetris();\n  tetris.play();\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/tetris.js\n **/","class Board {\n  constructor() {\n    this.gridHeight = 20;\n    this.gridWidth = 10;\n    this.grid = this.initializeGrid();\n  }\n\n  /**\n   * initialize empty game grid\n   */\n  initializeGrid() {\n    const grid = [];\n    for (let i = 0; i < this.gridHeight; i++) {\n      grid.push(new Array(this.gridWidth));\n    }\n    return grid;\n  }\n\n\n  blockAt(row, col) {\n    return this.grid[row][col];\n  }\n\n  /**\n   * set block at row, col to have the properties of the tetromino containing the block\n   */\n  setBlock(row, col, tetromino) {\n    this.grid[row][col] = tetromino;\n  }\n\n  /**\n   * set block at row, col to undefined\n   */\n  clearBlock(row, col) {\n    this.grid[row][col] = undefined;\n  }\n\n  /**\n   * perform callback function on each position of grid occupied by\n   * given tetromino located at (row, col) with given rotation.\n   */\n  eachBlock(row, col, tetromino, rotation, callback) {\n    let dRow = 0, dCol = 0;\n    let tetrominoBlocks = tetromino.rotations[rotation];\n    for (let currBit = 0b1000000000000000; currBit > 0; currBit >>= 1) {\n      if (currBit & tetrominoBlocks) {\n        callback(row + dRow, col + dCol);\n      }\n      dCol++;\n      if (dCol > 3) {\n        dCol = 0;\n        dRow++;\n      }\n    }\n  }\n\n  /**\n   * Place tetromino at row, col\n   */\n  placeTetromino(tetromino, row, col) {\n\n  }\n\n  /**\n   *  Return true if any block tetromino of given rotation located at (row, col)\n   *  will take a space already occupied on the board.\n   */\n  isOccupied(row, col, tetromino, rotation) {\n    let occupied = false;\n\n    const testOccupation = function (i, j) {\n      if (i < 0 || j < 0 ||\n        i >= this.gridHeight ||\n        j >= this.gridWidth ||\n        Boolean(this.blockAt(i, j))\n      ){\n        occupied = true;\n      }\n    }.bind(this);\n\n    this.eachBlock(row, col, tetromino, rotation, testOccupation);\n\n    return occupied;\n  }\n\n  printGridToConsole() {\n    for (let row = 0; row < this.gridHeight; row++) {\n      let rowString = '';\n      for (let col = 0; col < this.gridWidth; col++) {\n        rowString += this.blockAt(row, col) ? this.grid[row][col].string : \"-\";\n        rowString += \" \";\n      }\n      console.log(rowString);\n    }\n  }\n}\n\nexport default Board;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/board.js\n **/","/**\n * Tetrominos will be represented as 16-bit binary numbers, with each\n * bit representing a position on a 4x4 square grid:\n *  0  1  2  3\n *  4  5  6  7\n *  8  9 10 11\n * 12 13 14 15\n *\n * The o piece, for example, takes up sites 0, 1, 4, and 5, and can\n * therefore be represented by the binary number 0b1100 1100 0000 0000.\n *\n * In this way all of the pieces and all of their rotations can be\n * represented with very litte overhead. Additionally, this allows for\n * fast bit-level operations when iterating over all blocks in the game\n * grid.\n */\n\n// access n-th rotation of piece with o.rotations[n]\nexport const o = {\n  rotations: [\n    0b1100110000000000,\n    0b1100110000000000,\n    0b1100110000000000,\n    0b1100110000000000\n  ],\n  string: 'O'\n};\n\nexport const i = {\n  rotations: [\n    0b0100010001000100,\n    0b0000111100000000,\n    0b0010001000100010,\n    0b0000000011110000,\n  ],\n  string: 'I'\n};\n\nexport const t = {\n  rotations: [\n    0b0000111001000000,\n    0b0100110001000000,\n    0b0100111000000000,\n    0b0100011001000000\n  ],\n  string: 'T'\n};\n\nexport const l = {\n  rotations: [\n    0b0100010001100000,\n    0b0000111010000000,\n    0b1100010001000000,\n    0b0010111000000000\n  ],\n  string: 'L'\n};\n\nexport const j = {\n  rotations: [\n    0b0100010011000000,\n    0b1000111000000000,\n    0b0110010001000000,\n    0b0000111000100000\n  ],\n  string: 'J'\n};\n\nexport const s = {\n  rotations: [\n    0b0110110000000000,\n    0b0100011000100000,\n    0b0000011011000000,\n    0b1000110001000000\n  ],\n  string: 'S'\n};\n\nexport const z = {\n  rotations: [\n    0b1100011000000000,\n    0b0010011001000000,\n    0b0000110001100000,\n    0b0100110010000000\n  ],\n  string: 'Z'\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/tetrominos.js\n **/"],"sourceRoot":""}